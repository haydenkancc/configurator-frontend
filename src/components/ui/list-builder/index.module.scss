@use '@/app/variables';

.listBuilder {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.gridList {
  position: relative;
  border: 1px solid variables.$palette-neutral-outlinedBorder;
  border-radius: 0.375rem;
  outline: none;
  @include variables.box-shadow;

  &[data-focus-visible] {
    @include variables.focus-ring-active;
  }

  &:after {
    @include variables.focus-ring;
  }
}

.gridListEmpty {
  min-height: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  padding-inline: 0.5rem;
  color: variables.$palette-neutral-plainDisabledColor;
}

.gridListItem {
  position: relative;
  min-height: 2rem;
  display: flex;
  align-items: center;
  padding-inline: 0.5rem 0.25rem;
  border-width: 1px;
  border-color: transparent;
  border-left: none;
  border-right: none;
  outline: none;

  &:first-child {
    border-top-left-radius: 0.375rem;
    border-top-right-radius: 0.375rem;
  }

  &:last-child {
    border-bottom-left-radius: 0.375rem;
    border-bottom-right-radius: 0.375rem;
  }

  &:not(:last-of-type) {
    border-bottom-color: variables.$palette-neutral-outlinedBorder;
  }

  &[data-focus-visible] {
    @include variables.focus-ring-active;
  }

  &::after {
    @include variables.focus-ring(1px)
  }
}



.trashButton {
  position: relative;
  width: 1.5rem;
  height: 1.5rem;
  margin-left: auto;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 0.25rem;
  color: variables.$palette-danger-solidBg;
  outline: none;
  @include variables.focus-ring-inactive;

  &[data-hovered] {
    background-color: variables.$palette-danger-plainHoverBg;
  }

  &[data-pressed] {
    background-color: variables.$palette-danger-plainActiveBg;
  }

  &[data-focus-visible] {
    @include variables.focus-ring-active;
  }

  &::after {
    @include variables.focus-ring;
  }
}


.row {
  display: flex;
  gap: 0.5rem;
}

.addButton {
  flex: 0 0 auto;
  width: 2rem;
  height: 2rem;
  margin-left: auto;
  display: flex;
  justify-content: center;
  position: relative;
  outline: none;
  align-items: center;
  border-radius: 0.375rem;
  color: variables.$palette-primary-plainColor;
  box-sizing: content-box;

  &[data-hovered] {
    background-color: variables.$palette-primary-plainHoverBg;
  }

  &[data-pressed] {
    background-color: variables.$palette-primary-plainActiveBg;
  }

  &[data-focus-visible] {
    @include variables.focus-ring-active;
  }

  &::after {
    @include variables.focus-ring();
  }
}